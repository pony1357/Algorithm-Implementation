#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void build_heap(int* ary, int n);

void heapify(int* ary, int i, int n);

void heap_sort(int* ary, int n);

int main(int argc, char* argv[]){
        int n;
        printf("Input Size: ");
        scanf("%d", &n);

        int* ary = (int*)malloc(sizeof(int)*(n+1));
        srand(time(NULL));
        int i;
        for (i=1; i<=n; i++){
                ary[i] = rand() % 500;
        }

        printf("Before Sorting..\n");
        for (i=1; i<=n; i++){
                printf("%d ", ary[i]);
        }
        printf("\n\n");

        heap_sort(ary, n);

        printf("After Sorting..\n");
        for (i=n; i>=1; i--){
                printf("%d ", ary[i]);
        }
        printf("\n");

        free(ary);

        return 0;
}

void build_heap(int* ary, int n){
        for (int i=n/2; i>=1; i--){
                heapify(ary, i, n);
        }
}

void heapify(int* ary, int i, int n){
        int s;
        if (i*2+1<=n){
                if (ary[i*2] < ary[i*2+1]) s = i*2;
                else s = i*2+1;
        }
        else if (i*2<=n){
                s = i*2;
        }
        else return;

        if (ary[i] > ary[s]){
                int temp = ary[i];
                ary[i] = ary[s];
                ary[s] = temp;
                heapify(ary, s, n);
        }
}

void heap_sort(int* ary, int n){
        build_heap(ary, n);
        for (int i=n; i>=2; i--){
                int temp=ary[1];
                ary[1] = ary[i];
                ary[i] = temp;
                heapify(ary, 1, i-1);
        }
}
